"""Init

Revision ID: 20fb6d65a712
Revises: 
Create Date: 2023-03-15 22:22:28.741162

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20fb6d65a712'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('is_hr', sa.Boolean(), nullable=True),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('region',
    sa.Column('geo_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('geoname', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('geo_id')
    )
    op.create_table('skills',
    sa.Column('skill_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('skill_id')
    )
    op.create_table('specialization',
    sa.Column('spec_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spec_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('spec_id')
    )
    op.create_table('resume',
    sa.Column('resume_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('region', sa.Integer(), nullable=False),
    sa.Column('schedule', postgresql.ENUM('full time', 'epoch', 'flexible', 'part-time', 'remote', 'shift', name='schedule_enum'), nullable=True),
    sa.Column('lower_salary', sa.Integer(), nullable=True),
    sa.Column('upper_salary', sa.Integer(), nullable=True),
    sa.Column('industry', postgresql.ENUM('IT', 'Finance', 'Electronics', 'Industrial', 'Telecommunications', 'Business', 'Education', name='industry_enum'), nullable=False),
    sa.Column('specialization', sa.Integer(), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=True),
    sa.Column('employment', postgresql.ENUM('full', 'partial', 'internship', name='emloyment_enum'), nullable=True),
    sa.Column('company_type', postgresql.ENUM('startup', 'gov', 'accredited', 'commercialized', name='company_enum'), nullable=True),
    sa.Column('qualification', postgresql.ENUM('intern', 'junior', 'middle', 'senior', 'lead', name='qual_enum'), nullable=False),
    sa.Column('about', sa.String(), nullable=False),
    sa.Column('experience', sa.String(), nullable=False),
    sa.Column('education', sa.String(), nullable=False),
    sa.Column('phone', sa.String(length=11), nullable=True),
    sa.Column('telegram', sa.String(length=33), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['region'], ['region.geo_id'], ),
    sa.ForeignKeyConstraint(['specialization'], ['specialization.spec_id'], ),
    sa.PrimaryKeyConstraint('resume_id')
    )
    op.create_table('know_skills',
    sa.Column('resume', sa.Integer(), nullable=True),
    sa.Column('skill', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resume'], ['resume.resume_id'], ),
    sa.ForeignKeyConstraint(['skill'], ['skills.skill_id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('know_skills')
    op.drop_table('resume')
    op.drop_table('specialization')
    op.drop_table('skills')
    op.drop_table('region')
    op.drop_table('users')
    # ### end Alembic commands ###
